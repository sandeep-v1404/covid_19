{"version":3,"sources":["App.js","index.js"],"names":["App","useState","latest","setLatest","results","setResults","searchCountries","setSearchCountries","useEffect","axios","all","get","then","res","data","catch","err","console","log","lastUpdated","Date","parseInt","updated","toString","countries","filter","item","country","includes","map","i","cases","recovered","todayCases","todayDeaths","active","critical","Card","bg","text","key","className","style","margin","Img","variant","src","countryInfo","flag","width","height","Body","Title","Text","textAlign","color","CardDeck","border","Footer","deaths","Form","Group","controlId","Control","onChange","e","target","value","alignItems","type","placeholder","queries","columns","query","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.556e8f21.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Card, CardDeck, Form } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from \"axios\";\r\nimport Columns from \"react-columns\";\r\nfunction App() {\r\n\r\n    const [latest, setLatest] = useState([]);\r\n    const [results, setResults] = useState([]);\r\n    const [searchCountries, setSearchCountries] = useState(\"\");\r\n    useEffect(() => {\r\n        axios\r\n            .all([\r\n                axios.get(\"https://corona.lmao.ninja/v2/all\"),\r\n                axios.get(\"https://corona.lmao.ninja/v2/countries?sort=country\")\r\n\r\n            ])\r\n            .then(res => {\r\n                setLatest(res[0].data);\r\n                setResults(res[1].data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n    const date = new Date(parseInt(latest.updated));\r\n    const lastUpdated = date.toString();\r\n\r\n    const filterCountries = results.filter(item => {\r\n        return searchCountries !== \"\" ? item.country.includes(searchCountries) : item;\r\n    });\r\n\r\n    const countries = filterCountries.map((data, i) => {\r\n        const { country, cases, recovered, todayCases, todayDeaths, active, critical } = data;\r\n        return (\r\n            <Card bg=\"dark\" text=\"white\" key={i} className=\"text-center\" style={{ margin: \"10px\" }}>\r\n                <Card.Img variant=\"top\" src={data.countryInfo.flag} width=\"300px\" height=\"167px\" />\r\n                <Card.Body>\r\n                    <Card.Title>{country} </Card.Title>\r\n                    <Card.Text>Cases: {cases}</Card.Text>\r\n                    <Card.Text>Recovered: {recovered}</Card.Text>\r\n                    <Card.Text>Today's Cases: {todayCases}</Card.Text>\r\n                    <Card.Text>Today's Deaths: {todayDeaths}</Card.Text>\r\n                    <Card.Text>Active Cases: {active}</Card.Text>\r\n                    <Card.Text>Critical Cases: {critical}</Card.Text>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    });\r\n\r\n    var queries = [{\r\n        columns: 1,\r\n        query: \"min-width : 500px\"\r\n    }, {\r\n        columns: 3,\r\n        query: \"min-width: 1000px\"\r\n    }];\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <h2 style={{ textAlign: \"center\", color: \"white\" }}>COVID-19 Live Updates<br /> <br />Global Stats</h2>\r\n\r\n\r\n\r\n            <CardDeck>\r\n                <Card style={{ margin: \"10px\" }} border=\"dark\" className=\"text-center\" bg=\"info\" text=\"white\">\r\n                    <Card.Body>\r\n                        <Card.Title>Cases</Card.Title>\r\n                        <Card.Text>{latest.cases}</Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <small>{lastUpdated}</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n\r\n                <Card style={{ margin: \"10px\" }} border=\"dark\" className=\"text-center\" bg=\"danger\" text=\"white\">\r\n                    <Card.Body>\r\n                        <Card.Title>Deaths</Card.Title>\r\n                        <Card.Text>{latest.deaths}</Card.Text>\r\n\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <small>{lastUpdated}</small>\r\n\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card style={{ margin: \"10px\" }} border=\"dark\" className=\"text-center\" bg=\"success\" text=\"white\">\r\n                    <Card.Body>\r\n                        <Card.Title>Recovered</Card.Title>\r\n                        <Card.Text>{latest.recovered}</Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <small>{lastUpdated}</small>\r\n\r\n                    </Card.Footer>\r\n                </Card>\r\n            </CardDeck>\r\n            <Form>\r\n                <Form.Group controlId=\"formGroupEmail\">\r\n                    <Form.Control onChange={e => setSearchCountries(e.target.value)} style={{ width: \"50%\", textAlign: \"center\", margin: \"0 auto\", alignItems: \"center\" }} type=\"text\" placeholder=\"Search For a Country\" />\r\n                </Form.Group>\r\n            </Form>\r\n            <Columns style={{ textAlign: \"center\", margin: \"0 auto\", }} queries={queries}>{countries}</Columns>\r\n        </div>\r\n    )\r\n};\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<div>\r\n    <App />\r\n</div>, document.getElementById(\"root\"));"],"sourceRoot":""}